        -:    0:Source:daemon.c
        -:    0:Graph:daemon.gcno
        -:    0:Data:daemon.gcda
        -:    0:Runs:396
        -:    1:/*    $Header: /cvsroot/wikipedia/willow/src/bin/willow/daemon.c,v 1.1 2005/05/02 19:15:21 kateturner Exp $    */
        -:    2:/*    $NetBSD: daemon.c,v 1.9 2003/08/07 16:42:46 agc Exp $    */
        -:    3:/*-
        -:    4: * Copyright (c) 1990, 1993
        -:    5: *    The Regents of the University of California.  All rights reserved.
        -:    6: *
        -:    7: * Redistribution and use in source and binary forms, with or without
        -:    8: * modification, are permitted provided that the following conditions
        -:    9: * are met:
        -:   10: * 1. Redistributions of source code must retain the above copyright
        -:   11: *    notice, this list of conditions and the following disclaimer.
        -:   12: * 2. Redistributions in binary form must reproduce the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer in the
        -:   14: *    documentation and/or other materials provided with the distribution.
        -:   15: * 3. Neither the name of the University nor the names of its contributors
        -:   16: *    may be used to endorse or promote products derived from this software
        -:   17: *    without specific prior written permission.
        -:   18: *
        -:   19: * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
        -:   20: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   21: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   22: * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
        -:   23: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   24: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   25: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   26: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   27: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   28: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   29: * SUCH DAMAGE.
        -:   30: */
        -:   31:
        -:   32:#if defined __SUNPRO_C || defined __DECC || defined __HP_cc
        -:   33:# pragma ident "@(#)$Header: /cvsroot/wikipedia/willow/src/bin/willow/daemon.c,v 1.1 2005/05/02 19:15:21 kateturner Exp $"
        -:   34:# pragma ident "$NetBSD: daemon.c,v 1.9 2003/08/07 16:42:46 agc Exp $"
        -:   35:#endif
        -:   36:
        -:   37:#include <fcntl.h>
        -:   38:#include <stdio.h>
        -:   39:#include <stdlib.h>
        -:   40:#include <unistd.h>
        -:   41:
        -:   42:#include "memcached.h"
        -:   43:
        2:   44:int daemonize(int nochdir, int noclose)
        -:   45:{
        2:   46:    int fd;
        -:   47:
        2:   48:    switch (fork()) {
        -:   49:    case -1:
        -:   50:        return (-1);
        -:   51:    case 0:
        1:   52:        break;
    #####:   53:    default:
    #####:   54:        _exit(EXIT_SUCCESS);
        -:   55:    }
        -:   56:
        1:   57:    if (setsid() == -1)
        -:   58:        return (-1);
        -:   59:
        1:   60:    if (nochdir == 0) {
        1:   61:        if(chdir("/") != 0) {
    #####:   62:            perror("chdir");
    #####:   63:            return (-1);
        -:   64:        }
        -:   65:    }
        -:   66:
        2:   67:    if (noclose == 0 && (fd = open("/dev/null", O_RDWR, 0)) != -1) {
        1:   68:        if(dup2(fd, STDIN_FILENO) < 0) {
    #####:   69:            perror("dup2 stdin");
    #####:   70:            goto err_cleanup;
        -:   71:        }
        1:   72:        if(dup2(fd, STDOUT_FILENO) < 0) {
    #####:   73:            perror("dup2 stdout");
    #####:   74:            goto err_cleanup;
        -:   75:        }
        1:   76:        if(dup2(fd, STDERR_FILENO) < 0) {
    #####:   77:            perror("dup2 stderr");
    #####:   78:            goto err_cleanup;
        -:   79:        }
        -:   80:
        1:   81:        if(close(fd) < 0) {
    #####:   82:            perror("close");
    #####:   83:            return (-1);
        -:   84:        }
        -:   85:    }
        -:   86:    return (0);
        -:   87:
    #####:   88:    err_cleanup:
    #####:   89:        close(fd);
    #####:   90:        return (-1);
        -:   91:}
